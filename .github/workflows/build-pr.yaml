name: KLIO PR build

on: pull_request_target

permissions:
  issues: write
  pull-requests: write

jobs:

  golangci:
    name: lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          ref: ${{github.event.pull_request_target.head.ref}}
          repository: ${{github.event.pull_request_target.head.repo.full_name}}

      - name: golangci-lint
        uses: golangci/golangci-lint-action@v2
        with:
          version: latest

  build:
    strategy:
      matrix:
        os:
          - macos-latest
          - ubuntu-latest
          - windows-latest
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v2
        with:
          ref: ${{github.event.pull_request_target.head.ref}}
          repository: ${{github.event.pull_request_target.head.repo.full_name}}

      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.16

      - name: Build
        run: go build -v ./cmd/klio/...

  test:
    strategy:
      matrix:
        os:
          - macos-latest
          - ubuntu-latest
          - windows-latest
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v2
        with:
          ref: ${{github.event.pull_request_target.head.ref}}
          repository: ${{github.event.pull_request_target.head.repo.full_name}}

      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.16

      - name: Test
        run: |
          go test -v ./... -covermode=count -coverprofile=coverage.out

  coverage:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          ref: ${{github.event.pull_request_target.head.ref}}
          repository: ${{github.event.pull_request_target.head.repo.full_name}}

      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.16

      - name: Calculate coverage
        id: calc
        run: |
          go test -v ./... -covermode=count -coverprofile=coverage.out
          go tool cover -func=coverage.out > coverage.txt
          coverage="$(cat coverage.txt)"
          coverage="${coverage//'%'/'%25'}"
          coverage="${coverage//$'\n'/'%0A'}"
          coverage="${coverage//$'\r'/'%0D'}" 
          echo "::set-output name=coverage::$coverage"
          echo ::set-output name=pr_number::"$(jq --raw-output .pull_request.number "$GITHUB_EVENT_PATH")"

      - name: Create coverage comment for local pull request
        if: ${{ github.repository_owner != 'g2a-com' && github.event_name == 'pull_request' }}
        uses: peter-evans/create-or-update-comment@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          issue-number: ${{ steps.calc.outputs.pr_number }}
          body: |
            **Coverage report**
            ${{ steps.calc.outputs.coverage }}

      - name: Create coverage comment for upstream pull request
        if: ${{ github.repository_owner == 'g2a-com' && github.event_name == 'pull_request_target' }}
        continue-on-error: true
        uses: peter-evans/create-or-update-comment@v1
        with:
          token: ${{ secrets.KLIO_PR_COMMENT_KEY }}
          issue-number: ${{ steps.calc.outputs.pr_number }}
          body: |
            **Coverage report**
            ${{ steps.calc.outputs.coverage }}